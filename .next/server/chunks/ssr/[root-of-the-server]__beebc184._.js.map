{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/wgabrielsc/Documents/GitHub/lead-sus-vol/src/app/components/Etapa0.tsx"],"sourcesContent":["// components/Etapa0.tsx\n\"use client\";\n\nimport { motion } from \"framer-motion\";\n\ninterface FormData {\n  tipoVoluntario: 'existente' | 'interessado' | null;\n}\ninterface Etapa0Props {\n  form: FormData; handleChange: (e: React.ChangeEvent<any>) => void; onNext: () => void;\n}\n\nexport function Etapa0({ form, handleChange, onNext }: Etapa0Props) {\n  const isValid = form.tipoVoluntario !== null;\n\n  return (\n    <motion.div initial={{ opacity: 0, y: 50 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.5 }}>\n      <h2 className=\"text-xl font-regular mb-8 text-gray-800\">Você já é um voluntário na Comunidade da Fé?</h2>\n      <div className=\"flex flex-col space-y-4 mb-10\">\n        <label className={`p-4 w-full text-lg border rounded-md cursor-pointer transition text-center ${form.tipoVoluntario === 'existente' ? \"bg-purple-700 border-purple-700 text-white\" : \"border-gray-300 text-gray-700 hover:border-purple-500\"}`}>\n          <input type=\"radio\" name=\"tipoVoluntario\" value=\"existente\" className=\"sr-only\" checked={form.tipoVoluntario === 'existente'} onChange={handleChange} />\n          Sim, já sou voluntário\n        </label>\n        <label className={`p-4 w-full text-lg border rounded-md cursor-pointer transition text-center ${form.tipoVoluntario === 'interessado' ? \"bg-purple-700 border-purple-700 text-white\" : \"border-gray-300 text-gray-700 hover:border-purple-500\"}`}>\n          <input type=\"radio\" name=\"tipoVoluntario\" value=\"interessado\" className=\"sr-only\" checked={form.tipoVoluntario === 'interessado'} onChange={handleChange} />\n          Não, ainda não sou\n        </label>\n      </div>\n      <button onClick={onNext} disabled={!isValid} className={`flex items-center gap-2 font-bold rounded-md px-6 py-2 transition focus:outline-none cursor-pointer ${isValid ? 'bg-gray-800 hover:bg-gray-600 text-white' : 'bg-gray-300 text-gray-500 cursor-not-allowed'}`}>\n        Próximo <span className=\"text-sm font-light\"> ↵</span>\n      </button>\n    </motion.div>\n  );\n}"],"names":[],"mappings":"AAAA,wBAAwB;;;;;AAGxB;AAFA;;;AAWO,SAAS,OAAO,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,EAAe;IAChE,MAAM,UAAU,KAAK,cAAc,KAAK;IAExC,qBACE,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;QAAC,SAAS;YAAE,SAAS;YAAG,GAAG;QAAG;QAAG,SAAS;YAAE,SAAS;YAAG,GAAG;QAAE;QAAG,YAAY;YAAE,UAAU;QAAI;;0BACrG,8OAAC;gBAAG,WAAU;0BAA0C;;;;;;0BACxD,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,WAAW,CAAC,2EAA2E,EAAE,KAAK,cAAc,KAAK,cAAc,+CAA+C,yDAAyD;;0CAC5O,8OAAC;gCAAM,MAAK;gCAAQ,MAAK;gCAAiB,OAAM;gCAAY,WAAU;gCAAU,SAAS,KAAK,cAAc,KAAK;gCAAa,UAAU;;;;;;4BAAgB;;;;;;;kCAG1J,8OAAC;wBAAM,WAAW,CAAC,2EAA2E,EAAE,KAAK,cAAc,KAAK,gBAAgB,+CAA+C,yDAAyD;;0CAC9O,8OAAC;gCAAM,MAAK;gCAAQ,MAAK;gCAAiB,OAAM;gCAAc,WAAU;gCAAU,SAAS,KAAK,cAAc,KAAK;gCAAe,UAAU;;;;;;4BAAgB;;;;;;;;;;;;;0BAIhK,8OAAC;gBAAO,SAAS;gBAAQ,UAAU,CAAC;gBAAS,WAAW,CAAC,oGAAoG,EAAE,UAAU,6CAA6C,gDAAgD;;oBAAE;kCAC9P,8OAAC;wBAAK,WAAU;kCAAqB;;;;;;;;;;;;;;;;;;AAIrD","debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///Users/wgabrielsc/Documents/GitHub/lead-sus-vol/src/app/components/Etapa1.tsx"],"sourcesContent":["// components/Etapa1.tsx\n\"use client\";\n\nimport { motion } from \"framer-motion\";\nimport { useState, useEffect } from \"react\";\nimport estadosCidadesData from \"../lib/estados-cidades.json\";\n\n// Interface para os dados do formulário nesta etapa\ninterface FormData {\n  nome: string;\n  dataNascimento: string;\n  sexo: string;\n  whatsapp: string;\n  email: string;\n  estado: string;\n  cidade: string;\n}\n\n// Interface para as props do componente\ninterface Etapa1Props {\n  form: FormData;\n  handleChange: (e: React.ChangeEvent<any>) => void;\n  onNext: () => void;\n  onBack: () => void;\n  tipoVoluntario: 'existente' | 'interessado' | null; // Prop para saber o tipo\n}\n\n// Interface para o objeto de cada estado no JSON\ninterface Estado {\n  sigla: string;\n  nome: string;\n  cidades: string[];\n}\n\nexport function Etapa1({ form, handleChange, onNext, onBack, tipoVoluntario }: Etapa1Props) {\n  const [cidades, setCidades] = useState<string[]>([]);\n  \n  // Funções de validação\n  const validateName = (name: string) => /^[A-Za-zÀ-ÿ\\s]{3,}$/.test(name);\n  const validatePhone = (phone: string) => /^\\(\\d{2}\\)\\s9\\d{4}-\\d{4}$/.test(phone);\n  const validateEmail = (email: string) => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n  const isDateValid = (date: string) => date !== \"\";\n\n  // Lógica de validação para habilitar o botão\n  const isValid =\n    validateName(form.nome) &&\n    isDateValid(form.dataNascimento) &&\n    form.sexo !== \"\" &&\n    validatePhone(form.whatsapp) &&\n    form.estado !== \"\" &&\n    form.cidade !== \"\" &&\n    (form.email === \"\" || validateEmail(form.email));\n\n  // Efeito para carregar as cidades quando o estado muda\n  useEffect(() => {\n    if (form.estado) {\n      const estadoSelecionado = estadosCidadesData.estados.find(\n        (e: Estado) => e.sigla === form.estado\n      );\n      if (estadoSelecionado) {\n        setCidades(estadoSelecionado.cidades);\n      }\n    } else {\n      setCidades([]);\n    }\n  }, [form.estado]);\n\n  // Função para lidar com a mudança de estado e limpar a cidade\n  const handleEstadoChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const siglaEstado = e.target.value;\n    handleChange({ target: { name: \"estado\", value: siglaEstado } } as any);\n    handleChange({ target: { name: \"cidade\", value: \"\" } } as any);\n  };\n  \n  // Função para formatar o celular\n  const formatPhone = (value: string) => {\n    if (!value) return \"\";\n    value = value.replace(/\\D/g, '');\n    value = value.replace(/(\\d{2})(\\d)/, \"($1) $2\");\n    value = value.replace(/(\\d{5})(\\d)/, \"$1-$2\");\n    return value.substring(0, 15);\n  };\n  \n  // Funções de estilo para limpar o JSX\n  const inputStyle = (isValid: boolean) =>\n    `mb-10 font-light text-2xl w-full border-b bg-transparent text-gray-700 placeholder-gray-300 focus:outline-none py-2 ${isValid ? 'border-gray-300 focus:border-purple-700 focus:border-b-2' : 'border-red-500'}`;\n  const selectStyle = (isValid: boolean) =>\n    `mb-10 w-full text-2xl font-light border-b bg-transparent placeholder-gray-300 focus:outline-none focus:border-b-2 py-2 cursor-pointer ${isValid ? 'text-gray-700 border-gray-300 focus:border-purple-700' : 'text-gray-400 border-red-500'}`;\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 50 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n    >\n      <p className=\"text-2sm text-gray-400 mb-2\">1 → </p>\n      <h2 className=\"text-xl font-regular mb-6 text-gray-800\">Primeiro, precisamos das suas informações de contato.</h2>\n      \n      <label className=\"block text-xl text-gray-800 font-light \">Nome Completo *</label>\n      <input name=\"nome\" placeholder=\"Seu nome completo\" value={form.nome} onChange={handleChange} className={inputStyle(validateName(form.nome) || form.nome === '')} required />\n      \n      <label className=\"block text-xl text-gray-800 font-light \">Data de Nascimento *</label>\n      <input name=\"dataNascimento\" type=\"date\" value={form.dataNascimento} onChange={handleChange} className={inputStyle(isDateValid(form.dataNascimento) || form.dataNascimento === '')} required />\n      \n      <label className=\"block text-xl font-light text-gray-700\">Sexo *</label>\n      <select name=\"sexo\" value={form.sexo} onChange={handleChange} className={selectStyle(form.sexo !== '')} required>\n        <option value=\"\">Selecione...</option><option value=\"Masculino\">Masculino</option><option value=\"Feminino\">Feminino</option>\n      </select>\n      \n      <label className=\"block text-xl font-light text-gray-700 \">Celular (WhatsApp) *</label>\n      <input\n        name=\"whatsapp\"\n        placeholder=\"(19) 91234-5678\"\n        value={form.whatsapp}\n        onChange={(e) => {\n          e.target.value = formatPhone(e.target.value);\n          handleChange(e);\n        }}\n        className={inputStyle(validatePhone(form.whatsapp) || form.whatsapp === '')}\n        required\n      />\n      \n      <label className=\"block text-xl font-light text-gray-700\">E-mail</label>\n      <input name=\"email\" placeholder=\"seuemail@exemplo.com\" type=\"email\" value={form.email} onChange={handleChange} className={inputStyle(validateEmail(form.email) || form.email === '')} />\n      \n      <label className=\"block text-xl font-light text-gray-700\">Estado *</label>\n      <select name=\"estado\" value={form.estado} onChange={handleEstadoChange} className={selectStyle(form.estado !== '')} required>\n        <option value=\"\">Selecione um estado</option>\n        {estadosCidadesData.estados.map((estado: Estado) => (<option key={estado.sigla} value={estado.sigla}>{estado.nome}</option>))}\n      </select>\n\n      <label className=\"block text-xl font-light text-gray-700\">Cidade *</label>\n      <select name=\"cidade\" value={form.cidade} onChange={handleChange} className={selectStyle(form.cidade !== '')} disabled={!form.estado} required>\n        <option value=\"\">{form.estado ? \"Selecione uma cidade\" : \"Escolha um estado primeiro\"}</option>\n        {cidades.map((cidade) => (<option key={cidade} value={cidade}>{cidade}</option>))}\n      </select>\n\n      <div className=\"flex justify-between mt-8\">\n        <button onClick={onBack} className=\"bg-gray-800 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded-md\">\n          Voltar\n        </button>\n        \n        {/* BOTÃO DINÂMICO */}\n        <button\n          onClick={onNext}\n          disabled={!isValid}\n          className={`flex items-center justify-center gap-2 font-bold rounded-md px-6 py-2 transition focus:outline-none cursor-pointer min-w-[120px] ${isValid ? 'bg-gray-800 hover:bg-gray-600 text-white' : 'bg-gray-300 text-gray-500 cursor-not-allowed'}`}\n        >\n          {tipoVoluntario === 'existente' ? (\n            <>\n              Próximo <span className=\"text-sm font-light\"> ↵</span>\n            </>\n          ) : (\n            'Enviar'\n          )}\n        </button>\n      </div>\n    </motion.div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 485, "column": 0}, "map": {"version":3,"sources":["file:///Users/wgabrielsc/Documents/GitHub/lead-sus-vol/src/app/components/Etapa2.tsx"],"sourcesContent":["// components/Etapa2.tsx\n\"use client\";\n\nimport { motion } from \"framer-motion\";\n\nconst ministeriosDisponiveis = [\n  \"Worship\", \"Integração\", \"V.I.P\", \"Kids\", \"Creative\", \"Parking\", \"Teens\", \"RdkBrave\",\n  \"Lounge\", \"Connect\", \"Produção\", \"Cerimonial\", \"Campus Online\", \"Casais\", \"Clínica Da Alma\",\n  \"Baby\", \"Coral\", \"Eventos\", \"Store\",\n];\n\ninterface FormData {\n  ministerio: string[];\n}\ninterface Etapa2Props {\n  form: FormData;\n  handleChange: (e: React.ChangeEvent<any>) => void;\n  onBack: () => void;\n  onSubmit: () => void;\n}\n\nexport function Etapa2({ form, handleChange, onBack, onSubmit }: Etapa2Props) {\n  const isValid = form.ministerio.length > 0;\n\n  const toggleMinisterio = (value: string) => {\n    const updated = form.ministerio.includes(value)\n      ? form.ministerio.filter((m) => m !== value)\n      : [...form.ministerio, value];\n    handleChange({ target: { name: \"ministerio\", value: updated } } as any);\n  };\n\n  return (\n    <motion.div initial={{ opacity: 0, y: 50 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.5 }}>\n      <p className=\"text-2sm text-gray-400 mb-2\">2 →</p>\n      <h2 className=\"text-xl font-regular mb-6 text-gray-800\">\n        Ótimo! Agora, por favor, selecione o(s) ministério(s) em que você já atua.\n      </h2>\n\n      <label className=\"block text-xl font-light text-gray-700 mb-4\">Ministérios que serve *</label>\n      <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-3 mb-8\">\n        {ministeriosDisponiveis.map((min) => (\n          <label key={min} className=\"flex items-center gap-2 text-gray-700 cursor-pointer text-base\">\n            <input\n              type=\"checkbox\"\n              className=\"h-4 w-4 rounded border-gray-300 text-purple-600 focus:ring-purple-500\"\n              checked={form.ministerio.includes(min)}\n              onChange={() => toggleMinisterio(min)}\n            />\n            {min}\n          </label>\n        ))}\n      </div>\n\n      <div className=\"flex justify-between mt-8\">\n        <button onClick={onBack} className=\"bg-gray-800 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded-md\">\n          Voltar\n        </button>\n        <button\n          onClick={onSubmit}\n          disabled={!isValid}\n          className={`font-semibold rounded-md py-3 px-5 transition ${!isValid ? \"bg-gray-300 text-gray-500 cursor-not-allowed\" : \"bg-gray-800 hover:bg-blue-700 text-white\"}`}\n        >\n          Enviar Inscrição\n        </button>\n      </div>\n    </motion.div>\n  );\n}"],"names":[],"mappings":"AAAA,wBAAwB;;;;;AAGxB;AAFA;;;AAIA,MAAM,yBAAyB;IAC7B;IAAW;IAAc;IAAS;IAAQ;IAAY;IAAW;IAAS;IAC1E;IAAU;IAAW;IAAY;IAAc;IAAiB;IAAU;IAC1E;IAAQ;IAAS;IAAW;CAC7B;AAYM,SAAS,OAAO,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,QAAQ,EAAe;IAC1E,MAAM,UAAU,KAAK,UAAU,CAAC,MAAM,GAAG;IAEzC,MAAM,mBAAmB,CAAC;QACxB,MAAM,UAAU,KAAK,UAAU,CAAC,QAAQ,CAAC,SACrC,KAAK,UAAU,CAAC,MAAM,CAAC,CAAC,IAAM,MAAM,SACpC;eAAI,KAAK,UAAU;YAAE;SAAM;QAC/B,aAAa;YAAE,QAAQ;gBAAE,MAAM;gBAAc,OAAO;YAAQ;QAAE;IAChE;IAEA,qBACE,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;QAAC,SAAS;YAAE,SAAS;YAAG,GAAG;QAAG;QAAG,SAAS;YAAE,SAAS;YAAG,GAAG;QAAE;QAAG,YAAY;YAAE,UAAU;QAAI;;0BACrG,8OAAC;gBAAE,WAAU;0BAA8B;;;;;;0BAC3C,8OAAC;gBAAG,WAAU;0BAA0C;;;;;;0BAIxD,8OAAC;gBAAM,WAAU;0BAA8C;;;;;;0BAC/D,8OAAC;gBAAI,WAAU;0BACZ,uBAAuB,GAAG,CAAC,CAAC,oBAC3B,8OAAC;wBAAgB,WAAU;;0CACzB,8OAAC;gCACC,MAAK;gCACL,WAAU;gCACV,SAAS,KAAK,UAAU,CAAC,QAAQ,CAAC;gCAClC,UAAU,IAAM,iBAAiB;;;;;;4BAElC;;uBAPS;;;;;;;;;;0BAYhB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAO,SAAS;wBAAQ,WAAU;kCAA0E;;;;;;kCAG7G,8OAAC;wBACC,SAAS;wBACT,UAAU,CAAC;wBACX,WAAW,CAAC,8CAA8C,EAAE,CAAC,UAAU,iDAAiD,4CAA4C;kCACrK;;;;;;;;;;;;;;;;;;AAMT","debugId":null}},
    {"offset": {"line": 634, "column": 0}, "map": {"version":3,"sources":["file:///Users/wgabrielsc/Documents/GitHub/lead-sus-vol/src/app/formulario/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { Etapa0 } from \"../components/Etapa0\";\nimport { Etapa1 } from \"../components/Etapa1\";\nimport { Etapa2 } from \"../components/Etapa2\";\n\n// 1. INTERFACE DE DADOS SIMPLIFICADA\ninterface FormData {\n  nome: string;\n  dataNascimento: string;\n  sexo: string;\n  whatsapp: string;\n  email: string;\n  estado: string;\n  cidade: string;\n  tipoVoluntario: 'existente' | 'interessado' | null;\n  ministerio: string[]; // Apenas este campo extra é necessário\n}\n\nexport default function FormularioPage() {\n  const [etapa, setEtapa] = useState(0);\n\n  // 2. ESTADO INICIAL SIMPLIFICADO\n  const [form, setForm] = useState<FormData>({\n    nome: \"\",\n    dataNascimento: \"\",\n    sexo: \"\",\n    whatsapp: \"\",\n    email: \"\",\n    estado: \"\",\n    cidade: \"\",\n    tipoVoluntario: null,\n    ministerio: [],\n  });\n\n  const handleChange = (e: React.ChangeEvent<any>) => {\n    const { name, value, type, checked } = e.target;\n\n    if (name === \"tipoVoluntario\") {\n      setForm((prev) => ({ ...prev, tipoVoluntario: value }));\n      return;\n    }\n\n    const finalValue = type === \"checkbox\" ? checked : value;\n    setForm((prev) => ({ ...prev, [name]: finalValue }));\n  };\n\n  const handleSubmit = async () => {\n    console.log(\"Formulário enviado:\", form);\n    alert(\"Inscrição enviada com sucesso!\");\n    // Lógica de envio para a API aqui\n  };\n\n  // 3. LÓGICA DE NAVEGAÇÃO ATUALIZADA\n  const handleNext = () => {\n    // Saindo da Etapa 1\n    if (etapa === 1) {\n      // Se for voluntário, vai para a Etapa 2\n      if (form.tipoVoluntario === 'existente') {\n        setEtapa(2);\n      } else {\n        // Se NÃO for voluntário, envia o formulário direto\n        handleSubmit();\n      }\n    } else {\n      // Para todas as outras etapas (no caso, só a 0), apenas avança\n      setEtapa((prev) => prev + 1);\n    }\n  };\n\n  const handleBack = () => {\n    setEtapa((prev) => prev - 1);\n  };\n\n  return (\n    <div className=\"container mx-auto p-4 sm:p-8 max-w-2xl\">\n      {etapa === 0 && (\n        <Etapa0\n          form={form}\n          handleChange={handleChange}\n          onNext={handleNext}\n        />\n      )}\n      {etapa === 1 && (\n        <Etapa1\n          form={form}\n          handleChange={handleChange}\n          onNext={handleNext}\n          onBack={handleBack}\n          // Passamos o tipo para o botão da Etapa 1 saber o que fazer\n          tipoVoluntario={form.tipoVoluntario}\n        />\n      )}\n      {etapa === 2 && (\n        <Etapa2\n          form={form}\n          handleChange={handleChange}\n          onBack={handleBack}\n          onSubmit={handleSubmit}\n        />\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAoBe,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,iCAAiC;IACjC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY;QACzC,MAAM;QACN,gBAAgB;QAChB,MAAM;QACN,UAAU;QACV,OAAO;QACP,QAAQ;QACR,QAAQ;QACR,gBAAgB;QAChB,YAAY,EAAE;IAChB;IAEA,MAAM,eAAe,CAAC;QACpB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,MAAM;QAE/C,IAAI,SAAS,kBAAkB;YAC7B,QAAQ,CAAC,OAAS,CAAC;oBAAE,GAAG,IAAI;oBAAE,gBAAgB;gBAAM,CAAC;YACrD;QACF;QAEA,MAAM,aAAa,SAAS,aAAa,UAAU;QACnD,QAAQ,CAAC,OAAS,CAAC;gBAAE,GAAG,IAAI;gBAAE,CAAC,KAAK,EAAE;YAAW,CAAC;IACpD;IAEA,MAAM,eAAe;QACnB,QAAQ,GAAG,CAAC,uBAAuB;QACnC,MAAM;IACN,kCAAkC;IACpC;IAEA,oCAAoC;IACpC,MAAM,aAAa;QACjB,oBAAoB;QACpB,IAAI,UAAU,GAAG;YACf,wCAAwC;YACxC,IAAI,KAAK,cAAc,KAAK,aAAa;gBACvC,SAAS;YACX,OAAO;gBACL,mDAAmD;gBACnD;YACF;QACF,OAAO;YACL,+DAA+D;YAC/D,SAAS,CAAC,OAAS,OAAO;QAC5B;IACF;IAEA,MAAM,aAAa;QACjB,SAAS,CAAC,OAAS,OAAO;IAC5B;IAEA,qBACE,8OAAC;QAAI,WAAU;;YACZ,UAAU,mBACT,8OAAC,mIAAA,CAAA,SAAM;gBACL,MAAM;gBACN,cAAc;gBACd,QAAQ;;;;;;YAGX,UAAU,mBACT,8OAAC,mIAAA,CAAA,SAAM;gBACL,MAAM;gBACN,cAAc;gBACd,QAAQ;gBACR,QAAQ;gBACR,4DAA4D;gBAC5D,gBAAgB,KAAK,cAAc;;;;;;YAGtC,UAAU,mBACT,8OAAC,mIAAA,CAAA,SAAM;gBACL,MAAM;gBACN,cAAc;gBACd,QAAQ;gBACR,UAAU;;;;;;;;;;;;AAKpB","debugId":null}}]
}